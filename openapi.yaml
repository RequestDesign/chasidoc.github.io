openapi: 3.0.3
info:
  title: Request Bitrix Chasi APIs Definition
  description: |
    Данное API преднозначено для обмена данными с сайтом chasidesk.requestbitrix.ru.
    Ответ приходит в следующем формате:
    * Успешный:<br>
      `{
        status: "success",
        data: ответ_из_соответствующего_запроса,
        errors: {}
      }`.
      При пагинации появляется дополнительное поле `{_metadata: {total: int, limit: int, page: int, first_page: int, last_page: int, prev_page: int, next_page: int}}`. Поле `prev_page` и `next_page` является необязательным.
    * Ошибка: <br>
      `{
        status: "error",
        data: null,
        errors: ответ_с_ошибкой_из_соответствующего_запроса
      }`<br>
    
  contact:
    email: ma-ks2@ya.ru
  version: 1.0.0
servers:
  - url: http://chasidesk.requestbitrix.ru/api
    description: Development server
tags:
  - name: CSRF-токен
  - name: Аутентификация
  - name: Пользователь
  - name: Объявления
  - name: Рекламы
  - name: Бренды
  - name: Регистрация
  - name: Отзывы
  - name: FAQ
  - name: О приложении
  - name: Избранное
  - name: Города
paths:
  /csrf:
    get:
      tags:
        - CSRF-токен
      summary: Токен сессии
      description: |
        Возвращает токен сессии.
        Используйте полученный токен, передавая его в каждом запросе, используя ключ `sessid`
      responses:
        '200':
          description: Возвращает токен сессии
          content:
            application/json:
              schema:
                type: object
                properties:
                  sessid:
                    type: string
                    description: "Токен сессии"
                example:
                  sessid: "53eb06e0a1903fd3f773ad6624adc0f9"
  /login:
    post:
      tags:
        - Аутентификация
      summary: Авторизация пользователя
      description: |
        Для авторизация пользователя, используйте либо `email` для авторизации по почте, либо `phone` для авторизации по номеру телефона
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Login"
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                type: object
                properties: 
                  id: 
                    type: string
        '400':
          description: "Ошибка запроса"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        '403':
          description: "Ошибка запроса"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
  /logout:
    post:
      tags:
        - Аутентификация
      summary: Производит выход из аккаунта
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: "Ошибка запроса"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        '401':
          description: "Метод недоступен неавторизованным пользователям"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationError"
  /register:
    post:
      tags:
        - Регистрация
      summary: Создает нового пользователя
      requestBody:
        description: Создает нового пользователя, но не активированного. Для активации следует использовать метод /confirm-register
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Register"
      responses:
        '201':
          description: Возвращает id созданного пользователя
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
        '400':
          description: "Ошибка запроса"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
  /confirm-register:
    post:
      tags:
        - Регистрация
      summary: Подтверждение регистрации
      requestBody:
        description: Подтверждает регистрацию
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConfirmRegister"
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: "Ошибка запроса"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
  /confirm-code:
    post:
      tags:
        - Регистрация
      summary: Повторная отправка письма с кодом подтверждения
      requestBody:
        description: Отправляет письмо с кодом на почту(телефон)
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                phone:
                  type: number
                  format: phone
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: "Ошибка запроса"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
  /forgot:
    post:
      tags:
        - Аутентификация
      summary: Создает запрос на создание кода подтверждения и отправки кода на почту
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                phone:
                  type: number
      responses:
        '200':
          description: Возвращает id пользователя
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
        '400':
          description: "Ошибка запроса"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        '404':
          description: "Ошибка запроса"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
  /forgot/confirm-code:
    post:
      tags:
        - Аутентификация
      summary: Отправляет заново код для сценария "Забыли пароль"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                phone:
                  type: number
      responses:
        '200':
          description: Отправляет повторно код
          content:
            application/json:
              schema:
                type: array
                items: {}
        '400':
          description: "Ошибка запроса"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
  /confirm-forgot-code:
    post:
      tags:
        - Аутентификация
      summary: Проверяет код подтверждения
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                code:
                  type: string
              required:
                - id
                - code
      responses:
        '200':
          description: Проверяет код подтверждения
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: "Ошибка запроса"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
  /change-password:
    post:
      tags:
        - Аутентификация
      summary: Меняет пароль пользователю
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                password:
                  type: string
                confirmPassword:
                  type: string
              required:
                - id
                - password
                - confirmPassword
      responses:
        '200':
          description: Меняет пароль пользователя
          content:
            application/json: 
              schema:
                type: object
                properties: {}
        '400':
          description: "Ошибка запроса"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
  /user:
    get:
      tags:
        - Пользователь
      summary: Возвращает авторизованного пользователя
      responses:
        '200':
          description: Возвращает данные пользователя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: "Ошибка запроса"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        '401':
          description: "Метод недоступен неавторизованным пользователям"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationError"
  /user/confirm-email:
    post:
      tags:
        - Пользователь
      summary: Подтверждение почты при смене
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: number
              required:
                - code
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                type: array
                items: {}
        '404':
          description: "Ошибка запроса"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        '401':
          description: "Метод недоступен неавторизованным пользователям"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationError"
  /user/confirm-phone:
    post:
      tags:
        - Пользователь
      summary: Подтверждение телефона при смене
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: number
              required:
                - code
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                type: array
                items: {}
        '404':
          description: "Ошибка запроса"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        '401':
          description: "Метод недоступен неавторизованным пользователям"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationError"
  /user/confirm-code:
    post:
      tags:
        - Пользователь
      summary: Отправляет заново код для сценария "Смена почты или номера телефона"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                phone:
                  type: number
      responses:
        '200':
          description: Отправляет повторно код
          content:
            application/json:
              schema:
                type: array
                items: {}
        '400':
          description: "Ошибка запроса"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        '401':
          description: "Метод недоступен неавторизованным пользователям"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationError"
  /user/reviews:
    get:
      tags:
        - Отзывы
      summary: Возвращает список отзывов, написанных авторизованным пользователем
      parameters:
        - $ref: "#/components/parameters/limitQueryParam"
        - $ref: "#/components/parameters/pageQueryParam"
      responses:
        '200':
          description: Возвращает список отзывов, написанных авторизованным пользователем
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Review"
        '400':
          description: "Ошибка запроса"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        '401':
          description: "Метод недоступен неавторизованным пользователям"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationError"
    post:
      tags:
        - Отзывы
      summary: Создает новый отзыв
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReviewCreate"
      responses:
        '201':
          description: Возвращает id созданного отзыва
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
        '400':
          description: "Ошибка запроса"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        '401':
          description: "Метод недоступен неавторизованным пользователям"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationError"
  /user/photo:
    delete:
      tags:
        - Пользователь
      summary: Удаление фото пользователя
      responses:
        '200':
          description: ""
          content: 
            application/json:
              schema:
                type: array
                items: {}
        '400':
          description: "Ошибка запроса"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        '401':
          description: "Метод недоступен неавторизованным пользователям"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationError"
  /review-ratings:
    get:
      tags:
        - Отзывы
      summary: Возвращает список оценок и соответствующих им качеств
      responses:
        '200':
          description: Возвращает список оценок и соответствующих им качеств
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ReviewRatings"
        '400':
          description: "Ошибка запроса"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
  /reviews/{id}:
    delete:
      tags:
        - Отзывы
      summary: Удаление отзыва
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Возвращает id удаленного отзыва
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
  /users:
    delete:
      tags:
        - Пользователь
      summary: Удаляет пользователя
      parameters:
        - name: id
          in: query
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Удаляет пользователя
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: "Ошибка запроса"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
  /users/{id}:
    get:
      tags:
        - Пользователь
      summary: Возвращает поля пользователя
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Возвращает данные пользователя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: "Ошибка запроса"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
    post:
      tags:
        - Пользователь
      summary: Изменяет данные пользователя. Для смены пароля обязательно должно присутствовать все 3 поля `oldPassword`, `newPassword` и `confirmPassword`. Для смены аватара нужно передать строку в формате base64.
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserEdit" 
      responses:
        '200':
          description: Изменяет данные пользователя
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: "Ошибка запроса"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
  /users/{id}/reviews:
    get:
      tags:
        - Отзывы
      summary: Возвращает список отзывов, адресованных пользователю с указанным id
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
        - $ref: "#/components/parameters/limitQueryParam"
        - $ref: "#/components/parameters/pageQueryParam"
      responses:
        '200':
          description: Возвращает список отзывов, адресованных пользователю с указанным id
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Review"
        '400':
          description: "Ошибка запроса"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
  /ads:
    get:
      tags: 
        - Объявления
      summary: Список объявлений
      description: Возвращает список объявлений
      parameters:
        - $ref: "#/components/parameters/sortQueryParam"
        - $ref: "#/components/parameters/fieldsQueryParam"
        - $ref: "#/components/parameters/limitQueryParam"
        - $ref: "#/components/parameters/pageQueryParam"
        - $ref: "#/components/parameters/adsFilterQueryParam"
        - $ref: "#/components/parameters/searchQueryParam"
      responses:
        '200':
          description: Возвращает список объявлений
          content: 
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Ad"
              examples:
                value:
                  $ref: "#/components/examples/Ad"
        '400':
          description: "Ошибка запроса"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
    post:
      tags:
        - Объявления
      summary: Создание нового объявления
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdCreate"
      responses:
        '201':
          description: Возвращает id созданного объявления и ссылку для оплаты
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsPay"
        '400':
          description: "Ошибка запроса"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        '401':
          description: "Метод недоступен неавторизованным пользователям"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationError"
  /ads/draft:
    post:
      tags:
        - Объявления
      summary: Создание черновика объявления
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdCreateDraft"
      responses:
        '201':
          description: Возвращает id созданного объявления
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
        '400':
          description: "Ошибка запроса"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        '401':
          description: "Метод недоступен неавторизованным пользователям"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationError"
  /ads-create-values:
    get:
      tags:
        - Объявления
      summary: Возвращает список свойств с их вариантами значений для формы создания объявления
      responses:
        '200':
          description: Возвращает список свойств с их вариантами значений для формы создания объявления
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsCreateValues"
  /filter:
    get:
      tags:
        - Объявления
      summary: Список данных для создания фильтра
      description: Возвращает информацию об уникальных значениях текстовых свойств и граничные значения числовых свойств
      responses:
        '200':
          description: Возвращает массив данных для фильтра
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsFilter"
  /ads/{id}:
    get:
      tags:
        - Объявления
      summary: Информация об одном объявлении
      description: Возвращает информацию об одном объявлении
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Возвращает данные одного объявления
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsOne"
        '404':
          description: "Ошибка запроса"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
    post:
      tags:
        - Объявления
      summary: Редактирование объявления
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "#/components/schemas/AdCreate"
                - $ref: "#/components/schemas/AdCreateDraft"
      responses:
        '201':
          description: Возвращает id измененного объявления
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
        '400':
          description: "Ошибка запроса"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        '401':
          description: "Метод недоступен неавторизованным пользователям"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationError"
    delete:
      tags:
        - Объявления
      summary: Удаление объявления
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Возвращает id удаленного объявления
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
        '400':
          description: "Ошибка запроса"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        '401':
          description: "Метод недоступен неавторизованным пользователям"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationError"
  /user/ads/waiting:
    get:
      tags: 
        - Объявления
      summary: Список объявлений
      description: Возвращает список объявлений пользователя со статусами "Отклонено", "Ожидает оплаты" и "Истек срок размещения"
      responses:
        '200':
          description: Возвращает список объявлений
          content: 
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Ad"
              examples:
                value:
                  $ref: "#/components/examples/Ad"
        '400':
          description: "Ошибка запроса"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        '401':
          description: "Метод недоступен неавторизованным пользователям"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationError"
  /user/ads/drafts:
    get:
      tags: 
        - Объявления
      summary: Список объявлений
      description: Возвращает список объявлений пользователя со статусом "Черновик"
      responses:
        '200':
          description: Возвращает список объявлений
          content: 
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Ad"
              examples:
                value:
                  $ref: "#/components/examples/Ad"
        '400':
          description: "Ошибка запроса"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        '401':
          description: "Метод недоступен неавторизованным пользователям"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationError"
  /user/ads/active:
    get:
      tags: 
        - Объявления
      summary: Список объявлений
      description: Возвращает список объявлений пользователя со статусами "Продвигается", "Размещено" и "На модерации"
      responses:
        '200':
          description: Возвращает список объявлений
          content: 
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Ad"
              examples:
                value:
                  $ref: "#/components/examples/Ad"
        '400':
          description: "Ошибка запроса"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        '401':
          description: "Метод недоступен неавторизованным пользователям"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationError"
  /user/ads/archieve:
    get:
      tags: 
        - Объявления
      summary: Список объявлений
      description: Возвращает список объявлений пользователя со статусом "Закрыто"
      responses:
        '200':
          description: Возвращает список объявлений
          content: 
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Ad"
              examples:
                value:
                  $ref: "#/components/examples/Ad"
        '400':
          description: "Ошибка запроса"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        '401':
          description: "Метод недоступен неавторизованным пользователям"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationError"
  /user/ads/{id}/publish:
    patch:
      tags:
        - Объявления
      summary: Публикация объявления со статусами "Ожидает оплаты", "Истек срок размещения" и "Черновик"
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
      responses:
        '201':
          description: Возвращает id измененного объявления
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
        '400':
          description: "Ошибка запроса"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        '401':
          description: "Метод недоступен неавторизованным пользователям"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationError"
  /user/ads/{id}/archieve:
    patch:
      tags:
        - Объявления
      summary: Добавление в архив объявлений со статусами "Ожидает оплаты", "Черновик", "Отклонено", "Размещено", "Продвигается" и "На модерации"
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
      responses:
        '201':
          description: Возвращает id измененного объявления
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
        '400':
          description: "Ошибка запроса"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        '401':
          description: "Метод недоступен неавторизованным пользователям"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationError"
  /user/ads/{id}/promote:
    post:
      tags:
        - Объявления
      summary: Продвижение объявлений со статусом "Размещено"
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
      responses:
        '201':
          description: Возвращает id измененного объявления и ссылку для оплаты
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsPay"
        '400':
          description: "Ошибка запроса"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        '401':
          description: "Метод недоступен неавторизованным пользователям"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationError"
  /user/ads/{id}/pay:
    post:
      tags:
        - Объявления
      summary: Оплата объявлений со статусом "Ожидает оплаты"
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
      responses:
        '201':
          description: Возвращает id измененного объявления
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdsPay"
        '400':
          description: "Ошибка запроса"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        '401':
          description: "Метод недоступен неавторизованным пользователям"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationError"
  /favorites:
    get:
      tags:
        - Избранное
      summary: Возвращает список объявлений пользователя, добавленных в избранное
      responses:
        '200':
          description: Возвращает список объявлений пользователя, добавленных в избранное
          content: 
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Ad"
  /favorites/{id}:
    post:
      tags:
        - Избранное
      summary: Добавляет(удаляет) объявление в избранное(из избранного)
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
      responses:
        '201':
          description: Добавляет(удаляет) объявление в избранное(из избранного)
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: "Ошибка запроса"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
  /search-requests:
    get:
      tags:
        - Объявления
      summary: Возвращает историю поисковых запросов
      responses:
        '200':
          description: Возвращает историю поисковых запросов
          content: 
            application/json:
              schema:
                type: array
                items:
                  type: string
    post:
      tags:
        - Объявления
      summary: Добавляет строку поискового запроса в историю
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: Строка поискового запроса
      responses:
        '200':
          description: Добавляет строку поискового запроса в историю
          content:
            application/json:
              schema:
                type: array
                items: {}
        '400':
          description: "Ошибка запроса"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
  /advs:
    get:
      tags:
        - Рекламы
      summary: Список реклам
      description: Возвращает список реклам
      parameters:
        - $ref: "#/components/parameters/limitQueryParam"
        - $ref: "#/components/parameters/pageQueryParam"
      responses:
        '200':
          description: Возвращает список реклам
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Adv"
  /brands:
    get:
      tags:
        - Бренды
      summary: Список брендов
      description: Возвращает список брендов
      responses:
        '200':
          description: Возвращает список брендов
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Brand"
              examples:
                value:
                  $ref: "#/components/schemas/Brand"
        '400':
          description: "Ошибка запроса"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
  /faq:
    get:
      tags:
        - FAQ
      summary: Возвращает список вопросов и ответов
      responses:
        '200':
          description: Возвращает информацию о приложении
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    description:
                      type: string
  /about:
    get:
      tags:
        - О приложении
      summary: Возвращает информацию о приложении
      responses:
        '200':
          description: Возвращает информацию о приложении
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  description:
                    type: string
  /cities:
    get:
      tags:
        - Города
      summary: Возвращает список городов
      responses:
        '200':
          description: Возвращает список городов
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    region: 
                      type: string
                    city: 
                      type: string
components:
  parameters:
    sortQueryParam:
      description: |
        Используйте поле `sort` для сортировки запрашиваемых ресурсов. Поле `sort` представляет собой строку, состоящую из полей, по которым будет происходить сортировка, разделенные запятой. Если по определенному полю нужно изменить направление сортировки в обратную сторону, то перед названием поля нужно поставить знак `-`. Например: `?sort=id,-model`, `?sort=-id`
      name: sort
      in: query
      schema:
        type: string
      example: "-id,model"
    fieldsQueryParam:
      description: |
        Используйте поле `fields`, чтобы запрашиваемы ресурсы, содержали не все поля, а только указанные. Поле `fields` представляет собой строку, состоящую из запрашиваемых полей разделенных запятой. Например: `?fields=id,model` 
      name: fields
      in: query
      schema:
        type: string
      example: "id,model"
    limitQueryParam:
      description: |
        Используйте поле `limits` для пагинации, чтобы ограничить количество выводимых сущностей. Например: `?limits=16`. По умолчанию 0.
      name: limit
      in: query
      schema:
        type: integer
        minimum: 1
      example: 50
    pageQueryParam:
      description: |
        Используйте поле `page` для пагинации, чтобы указать номер страницы запрашиваемых ресурсов. Обязательно наличие поля `limits`. Например: `?limits=16&page=2`. Если указать поле `limits` без поля `page`, то поле `page` по умолчанию равно 1.
      name: page
      in: query
      schema:
        type: integer
        minimum: 1
      example: 2
    adsFilterQueryParam:
      description: |
        Используйте поле `filter` для фильтрации объявлений. Параметр запроса должен представлять json строку. Например `?filter={"<=year":2020}`. Структура содержимого json-строки представлена ниже. Большинство свойств принимает в качестве значения массив, состоящий из id элементов. Числовые свойства перед названием должны содержать знак `>`, `>=`, `<` или `<=`.
      name: filter
      in: query
      schema:
        type: object
        properties:
          brand:
            type: array
            items: 
              type: integer
          condition:
            type: array
            items: 
              type: integer
          gender:
            type: array
            items: 
              type: integer
          "<year":
            type: integer
          "<=year":
            type: integer
          ">year":
            type: integer
          ">=year":
            type: integer
          mechanism:
            type: array
            items: 
              type: integer
          frameColor:
            type: array
            items: 
              type: integer
          dialColor:
            type: array
            items: 
              type: integer
          country:
            type: array
            items: 
              type: integer
          sellerType:
            type: array
            items: 
              type: integer
          material:
            type: array
            items: 
              type: integer
          form:
            type: array
            items: 
              type: integer
          watchband:
            type: array
            items: 
              type: integer
          clasp:
            type: array
            items: 
              type: integer
          dial:
            type: array
            items: 
              type: integer
          waterProtection:
            type: array
            items: 
              type: integer
          "<price":
            type: number
          "<=price":
            type: number
          ">price":
            type: number
          ">=price":
            type: number
          city: 
            type: array
            items:
              type: string
    searchQueryParam:
      description: Используется для поиска данных. Формат поиска - название модели+бренд или наоборот
      name: q
      in: query
      schema:
        type: string
  schemas:
    BadRequest:
      type: object
      properties:
        message:
          type: string
          description: "Содержит текст ошибки"
        code:
          type: string
          description: "Содержит символьный код ошибки"
    AuthorizationError:
      type: object
      properties:
        message:
          type: string
          description: "Содержит текст ошибки"
        code:
          type: string
          description: "Содержит символьный код ошибки"
    Login:
      type: object
      properties:
        email:
          type: string
        phone:
          type: string
        password:
          type: string
      required: [password]
    Register:
      type: object
      properties:
        email:
          type: string
        phone:
          type: number
        name:
          type: string
        city:
          type: string
        password:
          type: string
        confirmPassword:
          type: string
      required:
        - name
        - city
        - password
        - confirmPassword
    ConfirmRegister:
      type: object
      properties:
        id:
          type: integer
        code:
          type: string
      required:
        - id
        - code
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        active:
          type: integer
          enum:
            - 1
            - 0
        name:
          type: string
        lastName:
          type: string
        phone:
          type: string
        city:
          type: string
        photo:
          type: string
        birthday:
          type: string
          format: date-time
        gender:
          type: string
          enum:
            - "M"
            - "F"
        dateCreated:
          type: string
          format: datetime
        adsCount:
          type: string
    UserEdit:
      type: object
      properties:
        photo:
          type: string
          format: base64
        name:
          type: string
        city:
          type: string
        birthday:
          type: string
          format: date-time
        gender:
          type: string
          enum: 
            - M
            - F
        oldPassword:
          type: string
        newPassword:
          type: string
        confirmPassword:
          type: string
        email:
          type: string
          format: email
        phone:
          type: string
          format: phone
    Ad:
      type: object
      properties:
        id:
          type: string
          description: Id объявления
        model:
          type: string
          description: Модель часов
        condition:
          type: string
          description: Состояние часов
        gender:
          type: string
          description: Пол
        year:
          type: string
          description: Год выпуска
        mechanism:
          type: string
          description: Тип механизма
        sellerType:
          type: string
          description: Вид продавца
        material:
          type: string
          description: Материал часов
        form:
          type: string
          description: Форма часов
        size:
          type: string
          description: Размер часов
        watchband:
          type: string
          description: Материал ремешка
        clasp:
          type: string
          description: Тип застежки
        dial:
          type: string
          description: Тип циферблата
        waterProtection:
          type: string
          description: Водозащита
        description:
          type: string
          description: Описание
        price:
          type: string
          description: Стоимость часов
        photo:
          type: array
          items:
            type: string
          description: URL адреса к фото с часами
        city: 
          type: string
          description: Город продажи
        brand:
          $ref: "#/components/schemas/Brand"
        frameColor:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
          description: Цвет корпуса
        dialColor:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
          description: Цвет циферблата
        country:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
          description: Страна производства
        user:
          description: ID пользователя, разместившего объявление
          allOf:
            - $ref: "#/components/schemas/ShortUser"
        video:
          type: string
          description: Ссылка на видео
        favorite:
          type: boolean
    AdCreate:
      type: object
      properties:
        brand:
          type: integer
        model:
          type: string
          maxLength: 255
        condition:
          type: integer
        gender:
          type: integer
        material:
          type: integer
        watchband:
          type: integer
        sellerType:
          type: integer
        year:
          type: integer
        mechanism:
          type: integer
        frameColor:
          type: integer
        country:
          type: integer
        form:
          type: integer
        size:
          type: integer
        clasp:
          type: integer
        dial:
          type: integer
        dialColor:
          type: integer
        waterProtection:
          type: integer
        description:
          type: string
          maxLength: 200
        photo:
          type: array
          items:
            type: string
            format: binary
        price:
          type: number
        promotion:
          type: string
          enum:
            - "1"
            - "0"
        promotionType:
          type: integer
        documentsList:
          type: integer
        documentsDescription:
          type: string
        video:
          type: string
    AdCreateDraft:
      type: object
      properties:
        brand:
          type: integer
        model:
          type: string
          maxLength: 255
        condition:
          type: integer
        gender:
          type: integer
        material:
          type: integer
        watchband:
          type: integer
        sellerType:
          type: integer
        year:
          type: integer
        mechanism:
          type: integer
        frameColor:
          type: integer
        country:
          type: integer
        form:
          type: integer
        size:
          type: integer
        clasp:
          type: integer
        dial:
          type: integer
        dialColor:
          type: integer
        waterProtection:
          type: integer
        description:
          type: string
          maxLength: 200
        photo:
          type: array
          items:
            type: string
            format: binary
        price:
          type: number
        promotion:
          type: string
          enum:
            - "1"
            - "0"
        promotionType:
          type: integer
        documentsList:
          type: integer
        documentsDescription:
          type: string
        video:
          type: string
    AdsCreateValues:
      type: object
      properties:
        brand:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              code:
                type: string
        condition:
          type: array
          items:
            type: object
            properties:
              id: 
                type: string
              value:
                type: string
        gender:
          type: array
          items:
            type: object
            properties:
              id: 
                type: string
              value:
                type: string
        mechanism:
          type: array
          items:
            type: object
            properties:
              id: 
                type: string
              value:
                type: string
        frameColor:
          type: array
          items:
            type: object
            properties:
              id: 
                type: string
              name:
                type: string
              color:
                type: string
        dialColor:
          type: array
          items:
            type: object
            properties:
              id: 
                type: string
              name:
                type: string
              color:
                type: string
        country:
          type: array
          items:
            type: object
            properties:
              id: 
                type: string
              name:
                type: string
        sellerType:
          type: array
          items:
            type: object
            properties:
              id: 
                type: string
              value:
                type: string
        material:
          type: array
          items:
            type: object
            properties:
              id: 
                type: string
              value:
                type: string
        form:
          type: array
          items:
            type: object
            properties:
              id: 
                type: string
              value:
                type: string
        size:
          type: array
          items:
            type: object
            properties:
              id: 
                type: string
              value:
                type: string
        watchband:
          type: array
          items:
            type: object
            properties:
              id: 
                type: string
              value:
                type: string
        clasp:
          type: array
          items:
            type: object
            properties:
              id: 
                type: string
              value:
                type: string
        dial:
          type: array
          items:
            type: object
            properties:
              id: 
                type: string
              value:
                type: string
        waterProtection:
          type: array
          items:
            type: object
            properties:
              id: 
                type: string
              value:
                type: string
        promotionType:
          type: array
          items:
            type: object
            properties:
              id: 
                type: string
              name:
                type: string
        documentsList:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
    AdsFilter:
      type: object
      properties:
        brand:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
        condition:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
        gender:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
        year:
          type: array
          items:
            type: object
            properties:
              min: 
                type: string
              max: 
                type: string
        mechanism:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
        frameColor:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              color:
                type: string
        dialColor:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              color:
                type: string
        country:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
        sellerType:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
        material:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
        form:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
        size:
          type: array
          items:
            type: object
            properties:
              id: 
                type: string
              value:
                type: string
        watchband:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
        clasp:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
        dial:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
        waterProtection:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
        price:
          type: array
          items:
            type: object
            properties:
              min: 
                type: string
              max: 
                type: string
        city:
          type: array
          items:
            type: string
    AdsOne:
      type: object
      properties:
        id:
          type: string
          description: Id
        photo:
          type: array
          items:
            type: string
          description: Фото
        brand:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
          description: Бренд
        model:
          type: string
          description: Модель
        year:
          type: string
          description: Год выпуска
        price:
          type: string
          description: Цена в рублях
        condition:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
          description: Состояние часов
        gender:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
          description: Пол
        mechanism:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
          description: Механизм
        frameColor:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
          description: Цвет часов
        country:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
          description: Страна производства
        material:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
          description: Материал часов
        form:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
          description: Форма часов
        size:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
          description: Размер часов
        watchband:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
          description: Материал ремешка
        clasp:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
          description: Тип застежки
        dial:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
          description: Тип циферблата
        dialColor:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
          description: Цвет циферблата
        waterProtection:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
          description: Водозащита
        description:
          type: string
          description: Описание
        dateCreated:
          type: string
          description: Дата создания объявления
        sellerType:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
          description: Тип продавца
        more:
          type: array
          items:
            type: string
          description: Id похожих объявлений
        user:
          type: object
          properties:
            id: 
              type: string
            name:
              type: string
            city:
              type: string
            photo:
              type: string
            advCount:
              type: string
              description: Количество объявлений у продавца
        documentsList:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
        documentsDescription:
          type: string
        video:
          type: string
        promotion:
          type: string
        promotionType:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
        status:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
        currencies:
          type: object
          properties:
            usd:
              type: number
            eur:
              type: number
        favorite:
          type: boolean
        views:
          type: string
        likes:
          type: string
        calls:
          type: string
        activeTo:
          type: string
          format: datetime
          nullable: true
    AdsPay:
      type: object
      properties:
        id:
          type: string
        url:
          description: Ссылка для оплаты тарифа
          type: string
          nullable: true
    Adv:
      type: object
      properties:
        id: 
          type: string
        name:
          type: string
        photo:
          type: string
        description:
          type: string
        advLink:
          type: string
          nullable: true
    Brand:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        code:
          type: string
      description: Бренд часов
    Review:
      type: object
      properties:
        id:
          type: string
        user:
          description: Кем написан отзыв
          allOf:
            - $ref: "#/components/schemas/ShortUser"
        to:
          description: Кому написан
          allOf:
            - $ref: "#/components/schemas/ShortUser"
        dateCreated:
          type: string
          format: datetime
        rating:
          type: string
        polite:
          description: Вежливый
          type: string
          enum:
            - "Y"
            - "null"
          nullable: true
        conscientious:
          description: Добросовестный
          type: string
          enum:
            - "Y"
            - "null"
          nullable: true
        quick_reply:
          description: Быстро отвечает
          type: string
          enum:
            - "Y"
            - "null"
          nullable: true
        rude:
          description: Хамит
          type: string
          enum:
            - "Y"
            - "null"
          nullable: true
        unfair:
          description: Нечестный
          type: string
          enum:
            - "Y"
            - "null"
          nullable: true
        long_reply:
          description: Долго отвечает
          type: string
          enum:
            - "Y"
            - "null"
          nullable: true
    ReviewCreate:
      type: object
      properties:
        to:
          type: number
          description: Кому написан отзыв
        rating:
          type: number
        polite:
          type: number
          enum:
            - 1
            - 0
        conscientious:
          type: number
          enum:
            - 1
            - 0
        quick_reply:
          type: number
          enum:
            - 1
            - 0
        rude:
          type: number
          enum:
            - 1
            - 0
        unfair:
          type: number
          enum:
            - 1
            - 0
        long_reply:
          type: number
          enum:
            - 1
            - 0
      required:
        - to
        - rating
    ReviewRatings:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        qualities:
          type: array
          items:
            type: object
            properties:
              code:
                type: string
              name:
                type: string
    ShortUser:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        lastName:
          type: string
        city:
          type: string
        photo:
          type: string
        phone:
          type: string
  examples:
    Ad:
      value:
        - id: "1"
          model: "TEST"
          condition: "Новые"
          gender: "Мужской"
          year: "2020"
          mechanism: "Кварцевый"
          sellerType: "Частный продавец"
          material: "Алюминий"
          form: "Бочка"
          size: "34 мм"
          watchband: "Кожа"
          clasp: "Раскладывающаяся застёжка"
          dial: "Цифровой"
          waterProtection: "3 ATM"
          description: "Описание"
          price: "5000"
          photo: 
            - "/upload/uf/6b4/0rxlrge47ssthmbgf599wuonte49n7we.jpg"
            - "/upload/uf/6b4/0rxlrge47ssthmbgf599wuonte49n7we.jpg"
          city: ""
          brand:
            id: "3"
            name: "Fossil"
            code: "fossil"
          frameColor: 
            id: "1"
            name: "Синий"
          dialColor: 
            id: "1"
            name: "Синий"
          country:
            id: "6"
            name: "Австрия"
          userId: 1
    Brand:
      value:
        - id: "1"
          name: "Rolex"
          code: "rolex"